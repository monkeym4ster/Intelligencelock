<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" 
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
		http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" 
	id="WebApp_ID" version="3.0">
  <display-name>ZRLock</display-name>
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>classpath:spring/root-context.xml</param-value>
  </context-param>
  
  <filter>
    <filter-name>encodingFilter</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <init-param>
      <param-name>encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>
    <init-param>
      <param-name>forceEncoding</param-name>
      <param-value>true</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>encodingFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
  
  
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
  <servlet>
    <servlet-name>DispatcherServlet</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>classpath:spring/webServlet/servlet-context.xml</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>DispatcherServlet</servlet-name>
    <url-pattern>/</url-pattern>
  </servlet-mapping>
  
  <!-- Session设置  -->
  <session-config>
  	<!-- 超时60分钟 -->
  	<session-timeout>60</session-timeout>
  </session-config>
	
	<!-- cas验证开始
	用于单点退出，该过滤器用于实现单点登出功能，可选配置
	<filter>
		<filter-name>CAS Single Sign Out Filter</filter-name>
		<filter-class>org.jasig.cas.client.session.SingleSignOutFilter</filter-class>
		<filter-class>com.ziroom.common.filter.CasSingleSignOutFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>CAS Single Sign Out Filter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	
	该过滤器负责用户的认证工作，必须启用它
	<filter>
		<filter-name>CASFilter</filter-name>
		<filter-class>org.jasig.cas.client.authentication.AuthenticationFilter</filter-class>
		自定义拦截器
		<filter-class>com.ziroom.common.filter.AuthenticationFilter</filter-class>
		不校验的路径地址
		<init-param>
			<param-name>excludePaths</param-name>
			<param-value>/fcPayVouchers,/bankAndDirectInterface,/zcInterface,/zcCallInterface</param-value>
		</init-param>
		
		<init-param>
			<param-name>casServerLoginUrl</param-name>
			<param-value>http://cas.ziroom.com/CAS/login</param-value> 
			<param-value>http://test.cas.ziroom.com/CAS/login</param-value>
			这里的server是服务端的IP
		</init-param>
		<init-param>
			callback url 如果资产想通过OA登录，此处可以写OA的首页地址
			<param-name>serverName</param-name>
 			<param-value>http://10.10.64.39:8080</param-value>
 			<param-value>http://10.30.24.44:8080</param-value>
			<param-value>http://zf.ziroom.com</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>CASFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	该过滤器负责对Ticket的校验工作，必须启用它
	<filter>
		<filter-name>CAS Validation Filter</filter-name>
		<filter-class>
			org.jasig.cas.client.validation.Cas20ProxyReceivingTicketValidationFilter</filter-class>
		<init-param>
			<param-name>casServerUrlPrefix</param-name>
			<param-value>http://cas.ziroom.com/CAS</param-value>
			 <param-value>http://test.cas.ziroom.com/CAS</param-value>
		</init-param>
		<init-param>
		callback url 如果资产想通过OA登录，此处可以写OA的首页地址
			<param-name>serverName</param-name>
			<param-value>http://10.10.64.39:8080</param-value>
			<param-value>http://10.30.24.44:8080</param-value>
 			<param-value>http://zf.ziroom.com</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>CAS Validation Filter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	该过滤器负责实现HttpServletRequest请求的包裹， 
	比如允许开发者通过HttpServletRequest的getRemoteUser()方法获得SSO登录用户的登录名，可选配置。 
		AttributePrincipal principal = (AttributePrincipal) request.getUserPrincipal(); 
		String username = principal.getName();
	<filter>
		<filter-name>CAS HttpServletRequest Wrapper Filter</filter-name>
		<filter-class>
			org.jasig.cas.client.util.HttpServletRequestWrapperFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>CAS HttpServletRequest Wrapper Filter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	cas验证结束 -->
	
	  
    <!-- 用户登录过滤 -->  
	<filter>  
	 <filter-name>loginFilter</filter-name>  
	 <filter-class>com.ziroom.common.filter.LoginFilterCas</filter-class>  
	 <init-param>  
	     <param-name>LOGIN_PERSONID</param-name>  
	     <param-value>LoginUser</param-value>  
	 </init-param>  
	 <init-param>  
	     <param-name>SHOW_LOGIN_PATH</param-name>  
	     <param-value>/loginController/loginOut</param-value>  
	 </init-param>  
	 <init-param>  
	     <param-name>DO_LOGIN_PATH</param-name>  
	     <param-value>/loginController/main</param-value>  
	 </init-param>
	</filter>  
	<filter-mapping>  
	    <filter-name>loginFilter</filter-name>  
	    <url-pattern>/*</url-pattern>  
	</filter-mapping>  
	<filter-mapping>  
	    <filter-name>loginFilter</filter-name>  
	    <url-pattern>*.jsp</url-pattern>  
	</filter-mapping>
	
  
  <welcome-file-list>
    <welcome-file>index.jsp</welcome-file>
  </welcome-file-list>
</web-app>